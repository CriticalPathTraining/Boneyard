//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;



public partial class ServerSideEntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
	
	#region Extensibility Method Definitions
	partial void OnCreated();
	#endregion
	
	public ServerSideEntitiesDataContext(string requestUrl) : 
			base(requestUrl) {
		this.OnCreated();
	}
	
	/// <summary>
	/// List of all app packages uploaded in the Dev Site
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="App Packages")]
	public Microsoft.SharePoint.Linq.EntityList<Document> AppPackages {
		get {
			return this.GetList<Document>("App Packages");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Documents")]
	public Microsoft.SharePoint.Linq.EntityList<Document> Documents {
		get {
			return this.GetList<Document>("Documents");
		}
	}
	
	/// <summary>
	/// Employees
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Employees")]
	public Microsoft.SharePoint.Linq.EntityList<EmployeesItem> Employees {
		get {
			return this.GetList<EmployeesItem>("Employees");
		}
	}
	
	/// <summary>
	/// This library contains administrator-approved form templates that were activated to this site collection.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Form Templates")]
	public Microsoft.SharePoint.Linq.EntityList<Item> FormTemplates {
		get {
			return this.GetList<Item>("Form Templates");
		}
	}
	
	/// <summary>
	/// Company Projects
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Projects")]
	public Microsoft.SharePoint.Linq.EntityList<ProjectsItem> Projects {
		get {
			return this.GetList<ProjectsItem>("Projects");
		}
	}
	
	/// <summary>
	/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
	public Microsoft.SharePoint.Linq.EntityList<Document> SiteAssets {
		get {
			return this.GetList<Document>("Site Assets");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
	public Microsoft.SharePoint.Linq.EntityList<WikiPage> SitePages {
		get {
			return this.GetList<WikiPage>("Site Pages");
		}
	}
	
	/// <summary>
	/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
	/// </summary>
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
	public Microsoft.SharePoint.Linq.EntityList<Document> StyleLibrary {
		get {
			return this.GetList<Document>("Style Library");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeesItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ProjectsItem))]
public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
	
	private System.Nullable<int> _id;
	
	private System.Nullable<int> _version;
	
	private string _path;
	
	private Microsoft.SharePoint.Linq.EntityState _entityState;
	
	private System.Collections.Generic.IDictionary<string, object> _originalValues;
	
	private string _title;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion

	Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
		get {
			return this._entityState;
		}
		set {
			if ((value != this._entityState)) {
				this._entityState = value;
			}
		}
	}

	System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
		get {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			return this._originalValues;
		}
	}
	
	public Item() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
	public System.Nullable<int> Id {
		get {
			return this._id;
		}
		set {
			if ((value != this._id)) {
				this.OnPropertyChanging("Id", this._id);
				this._id = value;
				this.OnPropertyChanged("Id");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
	public System.Nullable<int> Version {
		get {
			return this._version;
		}
		set {
			if ((value != this._version)) {
				this.OnPropertyChanging("Version", this._version);
				this._version = value;
				this.OnPropertyChanged("Version");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
	public string Path {
		get {
			return this._path;
		}
		set {
			if ((value != this._path)) {
				this.OnPropertyChanging("Path", this._path);
				this._path = value;
				this.OnPropertyChanged("Path");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
	public virtual string Title {
		get {
			return this._title;
		}
		set {
			if ((value != this._title)) {
				this.OnPropertyChanging("Title", this._title);
				this._title = value;
				this.OnPropertyChanged("Title");
			}
		}
	}
	
	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
	
	public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
	
	protected virtual void OnPropertyChanged(string propertyName) {
		if ((null != this.PropertyChanged)) {
			this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
		}
	}
	
	protected virtual void OnPropertyChanging(string propertyName, object value) {
		if ((null == this._originalValues)) {
			this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
		}
		if ((false == this._originalValues.ContainsKey(propertyName))) {
			this._originalValues.Add(propertyName, value);
		}
		if ((null != this.PropertyChanging)) {
			this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
		}
	}
}

/// <summary>
/// Create a new document.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
public partial class Document : Item {
	
	private string _name;
	
	private string _documentModifiedBy;
	
	private string _documentCreatedBy;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public Document() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
	public string Name {
		get {
			return this._name;
		}
		set {
			if ((value != this._name)) {
				this.OnPropertyChanging("Name", this._name);
				this._name = value;
				this.OnPropertyChanged("Name");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
	public string DocumentModifiedBy {
		get {
			return this._documentModifiedBy;
		}
		set {
			if ((value != this._documentModifiedBy)) {
				this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
				this._documentModifiedBy = value;
				this.OnPropertyChanged("DocumentModifiedBy");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
	public string DocumentCreatedBy {
		get {
			return this._documentCreatedBy;
		}
		set {
			if ((value != this._documentCreatedBy)) {
				this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
				this._documentCreatedBy = value;
				this.OnPropertyChanged("DocumentCreatedBy");
			}
		}
	}
}

/// <summary>
/// Create a new wiki page.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
public partial class WikiPage : Document {
	
	private string _wikiContent;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public WikiPage() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
	public string WikiContent {
		get {
			return this._wikiContent;
		}
		set {
			if ((value != this._wikiContent)) {
				this.OnPropertyChanging("WikiContent", this._wikiContent);
				this._wikiContent = value;
				this.OnPropertyChanged("WikiContent");
			}
		}
	}
	
	[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
	[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
	public override string Title {
		get {
			throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
		}
		set {
			throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employees")]
public partial class EmployeesItem : Item {
	
	private string _jobTitle;
	
	private string _team;
	
	private System.Nullable<double> _contributionInMilestones;
	
	private Microsoft.SharePoint.Linq.EntityRef<ProjectsItem> _project;
	
	private Microsoft.SharePoint.Linq.EntitySet<ProjectsItem> _projectsItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public EmployeesItem() {
		this._project = new Microsoft.SharePoint.Linq.EntityRef<ProjectsItem>();
		this._project.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectsItem>>(this.OnProjectSync);
		this._project.OnChanged += new System.EventHandler(this.OnProjectChanged);
		this._project.OnChanging += new System.EventHandler(this.OnProjectChanging);
		this._projectsItem = new Microsoft.SharePoint.Linq.EntitySet<ProjectsItem>();
		this._projectsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectsItem>>(this.OnProjectsItemSync);
		this._projectsItem.OnChanged += new System.EventHandler(this.OnProjectsItemChanged);
		this._projectsItem.OnChanging += new System.EventHandler(this.OnProjectsItemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="JobTitle", Storage="_jobTitle", FieldType="Text")]
	public string JobTitle {
		get {
			return this._jobTitle;
		}
		set {
			if ((value != this._jobTitle)) {
				this.OnPropertyChanging("JobTitle", this._jobTitle);
				this._jobTitle = value;
				this.OnPropertyChanged("JobTitle");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Team", Storage="_team", FieldType="Text")]
	public string Team {
		get {
			return this._team;
		}
		set {
			if ((value != this._team)) {
				this.OnPropertyChanging("Team", this._team);
				this._team = value;
				this.OnPropertyChanged("Team");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Contribution_x0020__x0028_in_x00", Storage="_contributionInMilestones", FieldType="Number")]
	public System.Nullable<double> ContributionInMilestones {
		get {
			return this._contributionInMilestones;
		}
		set {
			if ((value != this._contributionInMilestones)) {
				this.OnPropertyChanging("ContributionInMilestones", this._contributionInMilestones);
				this._contributionInMilestones = value;
				this.OnPropertyChanged("ContributionInMilestones");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project", Storage="_project", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Projects")]
	public ProjectsItem Project {
		get {
			return this._project.GetEntity();
		}
		set {
			this._project.SetEntity(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Primary_x0020_Contact", Storage="_projectsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Projects")]
	public Microsoft.SharePoint.Linq.EntitySet<ProjectsItem> ProjectsItem {
		get {
			return this._projectsItem;
		}
		set {
			this._projectsItem.Assign(value);
		}
	}
	
	private void OnProjectChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Project", this._project.Clone());
	}
	
	private void OnProjectChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Project");
	}
	
	private void OnProjectSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectsItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.EmployeesItem.Add(this);
		}
		else {
			e.Item.EmployeesItem.Remove(this);
		}
	}
	
	private void OnProjectsItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ProjectsItem", this._projectsItem.Clone());
	}
	
	private void OnProjectsItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ProjectsItem");
	}
	
	private void OnProjectsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ProjectsItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.PrimaryContact = this;
		}
		else {
			e.Item.PrimaryContact = null;
		}
	}
}

/// <summary>
/// Create a new list item.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Projects")]
public partial class ProjectsItem : Item {
	
	private string _description;
	
	private System.Nullable<System.DateTime> _dueDate;
	
	private Microsoft.SharePoint.Linq.EntitySet<EmployeesItem> _employeesItem;
	
	private Microsoft.SharePoint.Linq.EntityRef<EmployeesItem> _primaryContact;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public ProjectsItem() {
		this._employeesItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesItem>();
		this._employeesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem>>(this.OnEmployeesItemSync);
		this._employeesItem.OnChanged += new System.EventHandler(this.OnEmployeesItemChanged);
		this._employeesItem.OnChanging += new System.EventHandler(this.OnEmployeesItemChanging);
		this._primaryContact = new Microsoft.SharePoint.Linq.EntityRef<EmployeesItem>();
		this._primaryContact.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem>>(this.OnPrimaryContactSync);
		this._primaryContact.OnChanged += new System.EventHandler(this.OnPrimaryContactChanged);
		this._primaryContact.OnChanging += new System.EventHandler(this.OnPrimaryContactChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Text")]
	public string Description {
		get {
			return this._description;
		}
		set {
			if ((value != this._description)) {
				this.OnPropertyChanging("Description", this._description);
				this._description = value;
				this.OnPropertyChanged("Description");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Due_x0020_Date", Storage="_dueDate", FieldType="DateTime")]
	public System.Nullable<System.DateTime> DueDate {
		get {
			return this._dueDate;
		}
		set {
			if ((value != this._dueDate)) {
				this.OnPropertyChanging("DueDate", this._dueDate);
				this._dueDate = value;
				this.OnPropertyChanged("DueDate");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Project", Storage="_employeesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees")]
	public Microsoft.SharePoint.Linq.EntitySet<EmployeesItem> EmployeesItem {
		get {
			return this._employeesItem;
		}
		set {
			this._employeesItem.Assign(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Primary_x0020_Contact", Storage="_primaryContact", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employees")]
	public EmployeesItem PrimaryContact {
		get {
			return this._primaryContact.GetEntity();
		}
		set {
			this._primaryContact.SetEntity(value);
		}
	}
	
	private void OnEmployeesItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("EmployeesItem", this._employeesItem.Clone());
	}
	
	private void OnEmployeesItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("EmployeesItem");
	}
	
	private void OnEmployeesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Project = this;
		}
		else {
			e.Item.Project = null;
		}
	}
	
	private void OnPrimaryContactChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("PrimaryContact", this._primaryContact.Clone());
	}
	
	private void OnPrimaryContactChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("PrimaryContact");
	}
	
	private void OnPrimaryContactSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ProjectsItem.Add(this);
		}
		else {
			e.Item.ProjectsItem.Remove(this);
		}
	}
}
